{"info":{"author":"Joel Midstj\u00e4rna","author_email":"joel.midstjarna@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 3 - Alpha","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Programming Language :: Python :: 3","Programming Language :: Python :: 3.4","Programming Language :: Python :: 3.5","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Topic :: Software Development :: Build Tools"],"description":"# pycstruct\n\n[![AppVeyor](https://ci.appveyor.com/api/projects/status/github/midstar/pycstruct?svg=true)](https://ci.appveyor.com/api/projects/status/github/midstar/pycstruct)\n[![Coverage Status](https://coveralls.io/repos/github/midstar/pycstruct/badge.svg?branch=HEAD)](https://coveralls.io/github/midstar/pycstruct?branch=HEAD)\n[![Documentation](https://readthedocs.org/projects/pycstruct/badge/?version=latest)](https://pycstruct.readthedocs.io/en/latest/?badge=latest)\n\npycstruct is a python library for converting binary data to and from ordinary\npython dictionaries.\n\nData is defined similar to what is done in C language structs.\n\nTypical usage of this library is read/write binary files or binary data\ntransmitted over a network.\n\nIt supports all traditional data types (integer, unsigned integer, boolean and\nfloat) between 1 to 8 bytes large, arrays (lists), strings (UTF-8), bitfields\nand enums.\n\nStructs can be embedded inside other structs.\n\nIndividual elements can be stored / read in any byte order.\n\nCheckout the full documentation [here](https://pycstruct.readthedocs.io/en/latest/).\n\n## Installation\n\nSimply install the package using pip:\n\n    python3 -m pip install pycstruct\n\n## Example\n\nFollowing C has a structure (person) with a set of elements\nthat are written to a binary file.\n\n```c\n#include <stdio.h>\n#include <stdbool.h>\n#include <string.h>\n\n#pragma pack(1) // To secure no padding is added in struct\n\nstruct person \n{ \n    char name[50];\n    unsigned int age;\n    float height;\n    bool is_male;\n    unsigned int nbr_of_children;\n    unsigned int child_ages[10];\n};\n\n\nvoid main(void) {\n    struct person p;\n    memset(&p, 0, sizeof(struct person));\n\n    strcpy(p.name, \"Foo Bar\");\n    p.age = 42;\n    p.height = 1.75; // m\n    p.is_male = true;\n    p.nbr_of_children = 2;\n    p.child_ages[0] = 7;\n    p.child_ages[1] = 9;\n\n    FILE *f = fopen(\"simple_example.dat\", \"w\");\n    fwrite(&p, sizeof(struct person), 1, f);\n    fclose(f);\n}\n```\n\nTo read the binary file using pycstruct following code \nrequired.\n\n```python\nimport pycstruct\n\nperson = pycstruct.StructDef()\nperson.add('utf-8', 'name', length=50)\nperson.add('uint32', 'age')\nperson.add('float32','height')\nperson.add('bool8', 'is_male')\nperson.add('uint32', 'nbr_of_children')\nperson.add('uint32', 'child_ages', length=10)\n\nf = open('simple_example.dat','rb')\ninbytes = f.read()\nresult = person.deserialize(inbytes)\nf.close()\n\nprint(str(result))\n```\n\nThe produced output will be::\n\n    {'name': 'Foo Bar', 'is_male': True, 'nbr_of_children': 2, \n     'age': 42, 'child_ages': [7, 9, 0, 0, 0, 0, 0, 0, 0, 0], \n     'height': 1.75}\n\nTo write a binary file from python using the same structure\nusing pycstruct following code is required.\n\n```python\nimport pycstruct\n\nperson = pycstruct.StructDef()\nperson.add('utf-8', 'name', length=50)\nperson.add('uint32', 'age')\nperson.add('float32','height')\nperson.add('bool8', 'is_male')\nperson.add('uint32', 'nbr_of_children')\nperson.add('uint32', 'child_ages', length=10)\n\nmrGreen = {}\nmrGreen['name'] = \"MR Green\"\nmrGreen['age'] = 50\nmrGreen['height'] = 1.93\nmrGreen['is_male'] = True\nmrGreen['nbr_of_children'] = 3\nmrGreen['child_ages'] = [13,24,12]\n\nbuffer = person.serialize(mrGreen)\n\nf = open('simple_example_mr_green.dat','wb')\nf.write(buffer)\nf.close()\n```\n\n## Full documentation\n\nCheckout the full documentation [here](https://pycstruct.readthedocs.io/en/latest/).\n\n## Author and license\n\nThis application is written by Joel Midstj\u00e4rna and is licensed under the MIT License.\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"home_page":"http://github.com/midstar/pycstruct","keywords":"struct,enum,bitfield,binary,protocol,dict,dictionary","license":"MIT","maintainer":"","maintainer_email":"","name":"pycstruct","package_url":"https://pypi.org/project/pycstruct/","platform":"","project_url":"https://pypi.org/project/pycstruct/","project_urls":{"Homepage":"http://github.com/midstar/pycstruct"},"release_url":"https://pypi.org/project/pycstruct/0.1.0/","requires_dist":null,"requires_python":"","summary":"Binary data handling in Python using dictionaries","version":"0.1.0"},"last_serial":6811816,"releases":{"0.1.0":[{"comment_text":"","digests":{"md5":"0962077e8ffc83ee68feabb5ecbd05ae","sha256":"7263cc7c308805fd125695f0bd528077c69c0fcad57f2f54e8f514e1573f42cd"},"downloads":-1,"filename":"pycstruct-0.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"0962077e8ffc83ee68feabb5ecbd05ae","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":8056,"upload_time":"2020-03-14T15:39:05","upload_time_iso_8601":"2020-03-14T15:39:05.858786Z","url":"https://files.pythonhosted.org/packages/c8/fb/fbe5a5981bfb67d0aadd01a04c109f06d428d39a3362054271b8ff4729e1/pycstruct-0.1.0-py3-none-any.whl"},{"comment_text":"","digests":{"md5":"1d2cc9d18fee5ee259a05bbdf963c1f0","sha256":"0e591542d86d1c0998c195ec39dcab55a8506b9cf5b84c424407494cc80e04ec"},"downloads":-1,"filename":"pycstruct-0.1.0.tar.gz","has_sig":false,"md5_digest":"1d2cc9d18fee5ee259a05bbdf963c1f0","packagetype":"sdist","python_version":"source","requires_python":null,"size":7167,"upload_time":"2020-03-14T15:39:08","upload_time_iso_8601":"2020-03-14T15:39:08.418867Z","url":"https://files.pythonhosted.org/packages/a7/bd/932e34a4d2cf5d9b2b8bbc1f1d1c9796674dd4901516252e80d87b051d7e/pycstruct-0.1.0.tar.gz"}]},"urls":[{"comment_text":"","digests":{"md5":"0962077e8ffc83ee68feabb5ecbd05ae","sha256":"7263cc7c308805fd125695f0bd528077c69c0fcad57f2f54e8f514e1573f42cd"},"downloads":-1,"filename":"pycstruct-0.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"0962077e8ffc83ee68feabb5ecbd05ae","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":8056,"upload_time":"2020-03-14T15:39:05","upload_time_iso_8601":"2020-03-14T15:39:05.858786Z","url":"https://files.pythonhosted.org/packages/c8/fb/fbe5a5981bfb67d0aadd01a04c109f06d428d39a3362054271b8ff4729e1/pycstruct-0.1.0-py3-none-any.whl"},{"comment_text":"","digests":{"md5":"1d2cc9d18fee5ee259a05bbdf963c1f0","sha256":"0e591542d86d1c0998c195ec39dcab55a8506b9cf5b84c424407494cc80e04ec"},"downloads":-1,"filename":"pycstruct-0.1.0.tar.gz","has_sig":false,"md5_digest":"1d2cc9d18fee5ee259a05bbdf963c1f0","packagetype":"sdist","python_version":"source","requires_python":null,"size":7167,"upload_time":"2020-03-14T15:39:08","upload_time_iso_8601":"2020-03-14T15:39:08.418867Z","url":"https://files.pythonhosted.org/packages/a7/bd/932e34a4d2cf5d9b2b8bbc1f1d1c9796674dd4901516252e80d87b051d7e/pycstruct-0.1.0.tar.gz"}]}